<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>微服务架构 on JSkillCloud</title>
    <link>http://jskillcloud.com/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</link>
    <description>Recent content in 微服务架构 on JSkillCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://jskillcloud.com/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Zuul网关生产部署实践</title>
      <link>http://jskillcloud.com/post/2018-07-12-zuul-deployment-in-practice/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-07-12-zuul-deployment-in-practice/</guid>
      <description>介绍 Zuul是Netflix开源的微服务网关，在Netflix经过大规模生产验证，在业界很多公司有落地案例。 本文介绍Zuul网关的一些生产部</description>
    </item>
    
    <item>
      <title>Zuul路由管理实践</title>
      <link>http://jskillcloud.com/post/2018-07-10-zuul-routing-in-practice/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-07-10-zuul-routing-in-practice/</guid>
      <description>介绍 网关的核心功能之一是路由转发，为此，网关需要获取并维护一张路由表，这个路由表简单可以理解为一个服务名&amp;lt;&amp;gt;服务地址的映射表，有</description>
    </item>
    
    <item>
      <title>变色龙Archaius配置组件</title>
      <link>http://jskillcloud.com/post/2018-07-08-archaius-configuration-library/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-07-08-archaius-configuration-library/</guid>
      <description>介绍 如果我们要设计开发一套微服务基础架构，大家觉得哪个组件是最基础的？基于多年互联网分布式系统的实战经验，我的回答是配置中心以及配套的客户端</description>
    </item>
    
    <item>
      <title>四个架构设计案例及其思维方式</title>
      <link>http://jskillcloud.com/post/2018-07-06-arch-use-cases/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-07-06-arch-use-cases/</guid>
      <description>一、介绍 架构的本质是管理复杂性，抽象、分层、分治和演化思维是我们工程师/架构师应对和管理复杂性的四种最基本武器。 在上一篇架构之道~四种核心架</description>
    </item>
    
    <item>
      <title>携程Apollo配置中心的架构</title>
      <link>http://jskillcloud.com/post/2018-07-05-apollo-architecture/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-07-05-apollo-architecture/</guid>
      <description>一、介绍 Apollo（阿波罗）[参考附录1]是携程框架部研发并开源的一款生产级的配置中心产品，它能够集中管理应用在不同环境、不同集群的配置，</description>
    </item>
    
    <item>
      <title>SoundCloud微服务是如何分层的？</title>
      <link>http://jskillcloud.com/post/2018-06-29-soundcloud-microservices-layers/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-06-29-soundcloud-microservices-layers/</guid>
      <description>介绍 在前一篇BFF和网关是如何演化出来的文章中，我向大家解释了BFF和网关是什么，在微服务架构体系中各承担什么职责，以及它们是如何演化出来的</description>
    </item>
    
    <item>
      <title>Netflix微服务架构是如何分层的？</title>
      <link>http://jskillcloud.com/post/2018-06-28-netflix-microservices-layers/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-06-28-netflix-microservices-layers/</guid>
      <description>介绍 在之前一篇BFF和网关是如何演化出来的文章中，我向大家解释了BFF和网关Gateway是什么，在微服务架构体系中各承担什么职责，以及它们</description>
    </item>
    
    <item>
      <title>BFF和网关是如何演化出来的？</title>
      <link>http://jskillcloud.com/post/2018-06-07-bff-gateway-evolution/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-06-07-bff-gateway-evolution/</guid>
      <description>介绍 BFF(Backend for Frontend)和网关Gateway是微服务架构中的两个重要概念，这两个概念相对比较新，有些开发人员甚至是架构师都不甚理解。 本文用</description>
    </item>
    
    <item>
      <title>微服务为什么需要配置中心?</title>
      <link>http://jskillcloud.com/post/2018-06-07-why-centralized-configuration/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-06-07-why-centralized-configuration/</guid>
      <description>一、介绍 在系统架构中，和安全、日志、监控等非功能需求一样，配置管理也是一种非功能需求。配置中心是整个微服务基础架构体系中的一个组件，如下图，</description>
    </item>
    
    <item>
      <title>四种核心架构思维</title>
      <link>http://jskillcloud.com/post/2018-05-29-four-arch-thinkings/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-05-29-four-arch-thinkings/</guid>
      <description>一、介绍 架构的本质是管理复杂性，抽象、分层、分治和演化思维是我们工程师/架构师应对和管理复杂性的四种最基本武器。 最近团队来了一些新人，有些有</description>
    </item>
    
    <item>
      <title>微服务2.0技术栈选型手册</title>
      <link>http://jskillcloud.com/post/2018-05-29-msa-2.0-tech-stack-selection/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-05-29-msa-2.0-tech-stack-selection/</guid>
      <description>一、前言 2014年可以认为是微服务1.0的元年，当年有几个标志性事件，一是Martin Fowler在其博客上发表了“Microservice</description>
    </item>
    
    <item>
      <title>微服务该如何发布?</title>
      <link>http://jskillcloud.com/post/2018-05-28-deployment-mode/</link>
      <pubDate>Mon, 28 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-05-28-deployment-mode/</guid>
      <description>一、前言 根据2017年的DevOps发展报告，高效能组织和低效能组织在软件交付的效率上有数量级上的差异。技术组织的软件交付能力是一种综合能力</description>
    </item>
    
    <item>
      <title>中国式微服务技术栈2.0</title>
      <link>http://jskillcloud.com/post/2018-05-27-msa-tech-stack-chinese-style/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-05-27-msa-tech-stack-chinese-style/</guid>
      <description>前言 近年，Spring Cloud俨然已经成为微服务开发的主流技术栈，在国内开发者社区非常火爆。我近年一直在一线互联网公司（携程，拍拍贷等）开</description>
    </item>
    
    <item>
      <title>架构设计有哪些核心原则？</title>
      <link>http://jskillcloud.com/post/2018-05-21-architecture-principle/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-05-21-architecture-principle/</guid>
      <description>一、前言 如果一个技术已经存在3年，比如现在很火的前端技术react和vue等，那么我能预估这个技术大致还有3年的生命期，再久就不确定了；如果</description>
    </item>
    
    <item>
      <title>波波的架构理念</title>
      <link>http://jskillcloud.com/post/2018-05-17-architecture-thinking/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jskillcloud.com/post/2018-05-17-architecture-thinking/</guid>
      <description>背景 近期我会陆陆续续把我之前在infoq/聊聊架构等媒体上发表的文章，陆续搬到我的公司博客JSkillCloud上，这个是第一篇。 这篇有特殊</description>
    </item>
    
  </channel>
</rss>